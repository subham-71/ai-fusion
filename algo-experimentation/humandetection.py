# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D29FHFDVlUxv9X1LuhuNB_OZ8ehLo3Ea
"""


from huggingface_hub import hf_hub_download
from ultralytics import YOLO
from supervision import Detections
import cv2  # Corrected from 'cv' to 'cv2'

# Download model
model_path = hf_hub_download(
    repo_id="arnabdhar/YOLOv8-human-detection-thermal",
    filename="model.pt"
)

# Load model
model = YOLO(model_path)

# Method for inference
def inference(image_path):
    cv_image = cv2.imread(image_path, cv2.IMREAD_ANYCOLOR)  # Corrected from 'cv' to 'cv2'
    model_output = model(cv_image, conf=0.6, verbose=False)
    detections = Detections.from_ultralytics(model_output[0])
    return detections

import cv2
from huggingface_hub import hf_hub_download
from ultralytics import YOLO
from supervision import Detections
import matplotlib.pyplot as plt

# Assume the model has already been downloaded and loaded as per previous steps

# Modified method for inference and drawing, using matplotlib for display
def inference_with_drawing(image_path):
    # Read the image
    cv_image = cv2.imread(image_path, cv2.IMREAD_COLOR)

    # Perform inference
    model_output = model(cv_image, conf=0.6, verbose=False)
    detections = Detections.from_ultralytics(model_output[0])

    # Convert image from BGR to RGB for plotting
    cv_image_rgb = cv2.cvtColor(cv_image, cv2.COLOR_BGR2RGB)

    # Draw bounding boxes on the detections
    for det in detections.xyxy:
        x1, y1, x2, y2 = map(int, det)
        cv2.rectangle(cv_image_rgb, (x1, y1), (x2, y2), (0, 255, 0), 2)  # Green box with thickness 2

    # Display the image with detections using matplotlib
    plt.figure(figsize=(10, 10))  # You can adjust the figure size as needed
    plt.imshow(cv_image_rgb)
    plt.axis('off')  # Hide the axes
    plt.show()

    return detections

# Example usage
# Make sure 'war.jpg' is accessible in your Colab environment
inference_with_drawing('war.jpg')